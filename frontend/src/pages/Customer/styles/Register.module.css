/* Container for the registration form */
.container {
  min-height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
  padding: 20px;
  transition: all 0.3s ease;
  overflow: hidden; /* Added to prevent scrolling during animations */
}

/* Card that holds the form */
.card {
  background: #ffffff;
  border-radius: 24px;
  padding: 32px;
  width: 100%;
  max-width: 520px;
  box-shadow: 
    0 4px 6px -1px rgba(0, 0, 0, 0.1),
    0 2px 4px -1px rgba(0, 0, 0, 0.06),
    0 0 0 1px rgba(0, 0, 0, 0.05);
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.card:hover {
  transform: translateY(-2px);
  box-shadow: 
    0 10px 15px -3px rgba(0, 0, 0, 0.1),
    0 4px 6px -2px rgba(0, 0, 0, 0.05),
    0 0 0 1px rgba(0, 0, 0, 0.05);
}

/* Header section of the form */
.header {
  text-align: center;
  margin-bottom: 40px;
}

.title {
  color: #2c3e50;
  margin-bottom: 15px;
  font-size: 32px;
  font-weight: 700;
  letter-spacing: 1.2px;
  text-transform: uppercase;
  position: relative;
  display: inline-block;
}

.title::after {
  content: "";
  position: absolute;
  bottom: -10px;
  left: 0;
  width: 50%;
  height: 2px;
  background: #3b82f6;
  transition: width 0.3s ease-in-out;
}

.title:hover::after {
  width: 100%;
}

/* Form group for each input field */
.formGroup {
  margin-bottom: 20px;
  transition: margin-bottom 0.3s ease;
  position: relative;
  z-index: 1;
}

.formGroup:focus-within {
  z-index: 50;
}

/* Grouping input fields for a grid layout */
.formRow {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 16px;
  margin-bottom: 20px;
}

/* Style for input field container */
.inputGroup {
  position: relative;
  display: flex;
  align-items: center;
  width: 100%;
  min-height: 48px;
  border: 1px solid #e2e8f0;
  border-radius: 8px;
  background: #ffffff;
  transition: all 0.3s ease;
  margin-bottom: 0;
  padding: 0;
  z-index: 1;
}

.inputGroup:focus-within {
  border-color: #3b82f6;
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
  z-index: 50; /* Ensure focused input's suggestions appear on top */
}

/* Input and textarea shared styles */
.inputGroup input,
.inputGroup textarea {
  width: 100%;
  padding: 12px 12px 12px 36px;
  border: none;
  background: transparent;
  font-size: 14px;
  line-height: 1.5;
  color: #1e293b;
  transition: all 0.3s ease;
}

/* Specific textarea styles */
.textarea {
  width: 100%;
  padding: 14px 14px 14px 42px;
  border: none;
  background: transparent;
  font-size: 15px;
  min-height: 108px;
  padding-top: 18px;
  resize: vertical;
  overflow-y: auto;
  line-height: 1.5;
}

.inputGroup textarea {
  width: 100%;  /* Changed from 522px to 100% */
  height: 63px;
  padding: 12px 12px 12px 40px;
  border: none;
  background: transparent;
  font-size: 14px;
  line-height: 1.5;
  color: #1e293b;
  resize: none;
  font-family: inherit;
}

.textarea + .icon {
  top: 24px;
  transform: none;
}

/* Icon positioning */
.icon {
  position: absolute;
  left: 10px;
  top: 50%;
  transform: translateY(-50%);
  color: #94a3b8;
  font-size: 14px;
  transition: color 0.3s ease;
  pointer-events: none;
}

/* Remove default textarea resize handle */
textarea::-webkit-resizer {
  display: none;
}

/* Custom resize handle */
.inputGroup.withTextarea::after {
  content: '';
  position: absolute;
  right: 4px;
  bottom: 4px;
  width: 12px;
  height: 12px;
  background: linear-gradient(
    135deg,
    transparent 50%,
    #94a3b8 50%,
    #94a3b8 60%,
    transparent 60%
  );
  pointer-events: none;
  opacity: 0.6;
}

.inputGroup:hover {
  border-color: #94a3b8;
}

.inputGroup.hasValue .icon,
.inputGroup:focus-within .icon {
  color: #3b82f6;
}

.inputGroup input:focus,
.inputGroup textarea:focus {
  outline: none;
}

/* Enhanced input group styles */
.inputGroup {
  position: relative;
  display: flex;
  align-items: center;
  width: 100%;
  margin-bottom: 6px;
}

.inputGroup input,
.inputGroup textarea {
  padding-left: 42px;
  padding-right: 16px;
  width: 100%;
  transition: all 0.3s ease;
}

.inputGroup .icon {
  position: absolute;
  left: 14px;
  color: #64748b;
  transition: color 0.3s ease;
}

.inputGroup input:focus ~ .icon,

.inputIconContainer:hover {
  background-color: #3b82f6; /* Highlight when hovering over icon */
}

.inputIcon {
  font-size: 20px;
  color: #94a3b8;
  transition: color 0.3s ease;
}

.inputIconContainer:hover .inputIcon {
  color: #ffffff; /* Change icon color on hover */
}

/* Style for input and textarea fields */
input,
textarea {
  width: 100%;
  padding: 16px;
  padding-left: 50px;
  border: 2px solid #e2e8f0;
  border-radius: 12px;
  font-size: 18px;
  color: #333;
  background: #f9fafb;
  transition: border-color 0.3s ease, background-color 0.3s ease;
  box-sizing: border-box;
}

/* Focus state for inputs */
input:focus,
textarea:focus {
  border-color: #3b82f6;
  background-color: #ffffff;
  outline: none;
  box-shadow: 0 0 8px rgba(59, 130, 246, 0.3);
}

/* Style for the submit button */
.button {
  width: 100%;
  padding: 14px;
  background: #3b82f6;
  color: #ffffff;
  border: none;
  border-radius: 12px;
  font-size: 16px;
  font-weight: 600;
  cursor: pointer;
  transition: background-color 0.3s ease, transform 0.3s ease, box-shadow 0.3s ease;
  box-shadow: 0 10px 15px rgba(59, 130, 246, 0.2);
}

.button:hover {
  background: #2563eb;
  transform: translateY(-3px);
  box-shadow: 0 12px 20px rgba(59, 130, 246, 0.3);
}

/* Disabled state for the submit button */
.button:disabled {
  background: #94a3b8;
  cursor: not-allowed;
  box-shadow: none;
}

/* Prompt to log in if already have an account */
.loginPrompt {
  text-align: center;
  margin-top: 30px;
  color: #64748b;
  font-size: 16px;
  transition: color 0.3s ease;
}

.loginPrompt a {
  color: #3b82f6;
  text-decoration: none;
  font-weight: 500;
  transition: color 0.3s ease;
}

.loginPrompt a:hover {
  color: #2563eb;
  text-decoration: underline;
}

/* Error message styles */
.errorText {
  color: #dc2626;
  font-size: 14px;
  margin-top: 5px;
  display: block;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.errorText.show {
  opacity: 1;
  animation: shake 0.5s ease-out;
}

/* Error message shake animation */
@keyframes shake {
  0% { transform: translateX(-10px); }
  25% { transform: translateX(10px); }
  50% { transform: translateX(-6px); }
  75% { transform: translateX(6px); }
  100% { transform: translateX(0); }
}

/* Enhanced animations */
.animateForm {
  animation: slideUp 0.5s ease-out;
}

@keyframes slideUp {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}

/* Password strength indicator */
.passwordStrength {
  margin-top: 8px;
  height: 4px;
  background: #e2e8f0;
  border-radius: 2px;
}

.strengthBar {
  height: 100%;
  border-radius: 2px;
  transition: width 0.3s ease;
}

.strength1 { width: 25%; background: #ef4444; }
.strength2 { width: 50%; background: #f59e0b; }
.strength3 { width: 75%; background: #10b981; }
.strength4 { width: 100%; background: #059669; }

/* Password toggle button */
.passwordToggle {
  position: absolute;
  right: 10px;
  background: none;
  border: none;
  color: #64748b;
  cursor: pointer;
  padding: 5px;
}

/* Location picker styles */
.locationGroup {
  position: relative;
  z-index: 20;
}

.locationActions {
  display: flex;
  gap: 8px;
  margin-top: 8px;
}

.locationToggle,
.addressToggle {
  padding: 8px 16px;
  border: 1px solid #3b82f6;
  border-radius: 6px;
  background: transparent;
  color: #3b82f6;
  cursor: pointer;
  transition: all 0.3s ease;
  flex: 1;
}

.locationToggle:hover,
.addressToggle:hover {
  background: #3b82f6;
  color: white;
}

.mapContainer {
  position: relative;
  margin-top: 16px;
  border-radius: 12px;
  overflow: hidden;
  height: 400px;  /* Increased height */
  border: 1px solid #e2e8f0;
  background-color: #f8fafc;
  z-index: 10;
}

.closeMap {
  position: absolute;
  top: 8px;
  right: 8px;
  background: white;
  border: none;
  border-radius: 50%;
  width: 32px;
  height: 32px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  z-index: 1000;
}

/* Animation for map container */
.fadeIn {
  animation: fadeIn 0.3s ease-out;
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(-10px); }
  to { opacity: 1; transform: translateY(0); }
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .card {
    padding: 20px;
    margin: 12px;
  }

  .formRow {
    grid-template-columns: 1fr;
    gap: 16px;
  }

  .locationActions {
    flex-direction: column;
  }
  
  .mapContainer {
    height: 250px;
  }

  .inputGroup {
    min-height: 44px;
  }

  .inputGroup textarea {
    min-height: 90px;
  }
}

/* Location group specific styles */
.locationGroup .inputGroup {
  margin-bottom: 12px;
}

/* New address input components */
.manualAddressInputs {
  display: flex;
  flex-direction: column;
  gap: 16px;
  width: 100%;
  padding: 24px;
  background: #ffffff;
  border: 1px solid #e2e8f0;
  border-radius: 12px;
  margin-top: 16px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
}

.manualAddressInputs .inputGroup {
  margin-bottom: 0;
  border: 2px solid #e2e8f0;
  transition: all 0.3s ease;
}

.manualAddressInputs .inputGroup:focus-within {
  border-color: #3b82f6;
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

.manualAddressInputs .inputGroup input,
.manualAddressInputs .inputGroup textarea {
  font-size: 15px;
  padding: 14px 14px 14px 42px;
}

.manualAddressInputs .icon {
  left: 14px;
  font-size: 16px;
}

.addressModeToggle {
  display: flex;
  gap: 12px;
  margin-bottom: 20px;
  padding: 4px;
  background: #f1f5f9;
  border-radius: 10px;
}

.modeButton {
  flex: 1;
  padding: 12px 20px;
  border: none;
  background: transparent;
  color: #64748b;
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.3s ease;
  font-weight: 600;
  font-size: 14px;
}

.modeButton.active {
  background: #ffffff;
  color: #3b82f6;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
}

.modeButton:hover:not(.active) {
  color: #3b82f6;
  background: rgba(255, 255, 255, 0.5);
}
.autocompleteWrapper {
  position: relative;
  width: 100%;
  z-index: 40;
}

.suggestions {
  position: absolute;
  top: calc(100% - 10px); /* Adjust to overlap with input slightly */
  left: 0;
  right: 0;
  background-color: #ffffff;
  border: 1px solid #e2e8f0;
  border-radius: 8px;
  max-height: 200px;
  overflow-y: auto;
  z-index: 9999; /* Ensure it's above other elements */
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  margin-top: 2px;
  width: 100%;
}

.suggestionItem {
  padding: 12px 16px;
  cursor: pointer;
  background-color: #ffffff;
  color: #1e293b;
  border-bottom: 1px solid #e2e8f0;
  font-size: 14px;
  transition: all 0.2s ease;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.suggestionItem:last-child {
  border-bottom: none;
}

.suggestionItem:hover {
  background-color: #f1f5f9;
  color: #3b82f6;
}

.addressModeToggle {
  display: flex;
  gap: 10px;
  margin-bottom: 16px;
}

.modeButton {
  flex: 1;
  padding: 12px;
  border: 2px solid #3b82f6;
  background: transparent;
  color: #3b82f6;
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.3s ease;
  font-weight: 600;
}

.modeButton.active {
  background: #3b82f6;
  color: white;
}

.modeButton:hover {
  background: #3b82f6;
  color: white;
  transform: translateY(-1px);
  box-shadow: 0 2px 4px rgba(59, 130, 246, 0.1);
}

.manualAddressInputs {
  display: flex;
  flex-direction: column;
  gap: 12px;
}

.autocompleteWrapper {
  position: relative;
  width: 100%;
}

.suggestions {
  position: absolute;
  top: 100%;
  left: 0;
  right: 0;
  background: white;
  border: 1px solid #e2e8f0;
  border-radius: 8px;
  max-height: 200px;
  overflow-y: auto;
  z-index: 1000;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
}

.suggestionItem {
  padding: 10px;
  cursor: pointer;
  transition: background-color 0.2s;
}

.suggestionItem:hover {
  background-color: #f8fafc;
}

/* Fix input group width issue */
.inputGroup {
  width: 100%;
  max-width: 100%;
}

/* Ensure the map is visible */
.locationGroup .mapContainer {
  display: block;
  width: 100%;
  background: #ffffff;
}
