const express = require("express");
const router = express.Router();
const winston = require("winston");
const { format, transports, createLogger } = winston;

// Create a custom format for the logger
const customFormat = format.combine(
  format.colorize(),
  format.timestamp({ format: 'YYYY-MM-DD HH:mm:ss' }),
  format.printf(({ timestamp, level, message, stack }) => {
    return stack
      ? `${timestamp} [${level}]: ${message} - ${stack}` // Print stack trace for errors
      : `${timestamp} [${level}]: ${message}`;
  })
);

// Create a Winston logger instance
const logger = createLogger({
  level: "info",
  format: customFormat,
  transports: [
    new transports.Console(),
    new transports.File({ filename: "logs/error.log", level: "error" }),
    new transports.File({ filename: "logs/combined.log" })
  ],
  exceptionHandlers: [
    new transports.File({ filename: 'logs/exceptions.log' })
  ],
  rejectionHandlers: [
    new transports.File({ filename: 'logs/rejections.log' })
  ]
});

// Middleware to log requests
router.use((req, res, next) => {
  logger.info(`${req.method} ${req.url}`);
  next();
});

module.exports = logger;